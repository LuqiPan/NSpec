grammar NSpec
  # Top level rule
  rule expectation
    expect S actual S prep S match_clause
  end

  rule match_clause
    regular_matcher_with_be / regular_matcher_without_be
  end

  rule regular_matcher_with_be
    be S matcher S expected / be S expected
  end

  rule regular_matcher_without_be
    matcher S expected
  end

  rule expect
    'expect'
  end

  rule actual
    variable / numbers
  end

  rule prep
    to / not_to
  end

  rule expected
    variable / numbers
  end

  rule be
    'be'
  end

  rule matcher
    equal / compare / type_and_class
  end

  rule equal
    'equal' / 'eql' / 'eq'
  end

  rule compare
    '>=' / '<=' / '>' / '<'
  end

  rule type_and_class
    'instance' S 'of' / 'kind' S 'of'
  end

  # Preposition
  rule to
    'to'
  end

  rule not_to
    'not' S 'to'
  end

  # Primitives
  rule numbers
    [0-9]+
  end

  rule characters
    [a-zA-Z_]+
  end

  rule variable
    characters+ (characters/numbers)*
  end

  # White spaces
  rule OS #optional spaces
    [ \t]*
  end

  rule S #white spaces
    [ \t]+
  end

  rule problems
    word &{ |s| binding.pry; true }
  end
end
