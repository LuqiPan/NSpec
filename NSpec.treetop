grammar NSpec
  # Top level rule
  rule expectation
    expect S actual S prep S match_clause
  end

  rule match_clause
    match_with_be / match_without_be
  end

  rule existence
    'exist'
  end

  rule match_with_be
    be_between / be_within / be_truthy / be_falsey / regular_match_with_be
  end

  rule be_falsey
    be S 'falsey'
  end

  rule be_truthy
    be S 'truthy'
  end

  rule raise_error
    'raise' S 'error'
  end

  rule match_without_be
    existence / raise_error / regular_match_without_be / match_expression / bound / response
  end

  rule response
    'respond' S 'to' S expected
  end

  rule bound
    ('start' / 'end') S 'with' S expected
  end

  rule be_within
    be S 'within' S numbers S 'of' S expected
  end

  rule match_expression
    'match' S expected
  end

  rule regular_match_with_be
    be S matcher S expected / identity
  end

  rule regular_match_without_be
    matcher S expected
  end

  rule be_between
    be S 'between' S expected S expected S clusivity
  end

  rule clusivity
    'inclusive' / 'exclusive'
  end

  rule expect
    'expect'
  end

  rule actual
    variable / numbers
  end

  rule prep
    to / not_to
  end

  rule expected
    variable / numbers
  end

  rule be
    'be'
  end

  rule matcher
    equal / compare / type_and_class
  end

  rule identity
    be S expected
  end

  rule equal
    'equal' / 'eql' / 'eq'
  end

  rule compare
    '>=' / '<=' / '>' / '<'
  end

  rule type_and_class
    'instance' S 'of' / 'kind' S 'of'
  end

  # Preposition
  rule to
    'to'
  end

  rule not_to
    'not' S 'to'
  end

  # Primitives
  rule numbers
    [0-9]+
  end

  rule characters
    [a-zA-Z_]+
  end

  rule variable
    characters+ (characters/numbers)*
  end

  # White spaces
  rule OS #optional spaces
    [ \t]*
  end

  rule S #white spaces
    [ \t]+
  end

  rule problems
    word &{ |s| binding.pry; true }
  end
end
